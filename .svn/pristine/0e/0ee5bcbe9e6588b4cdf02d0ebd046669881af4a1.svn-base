(function ($) {

    $(document).ready(function () {
        debugger;
        Global.Initialize();
      
    });
})(jQuery);
var Global = new function () {
    this.Initialize= function () {

        this.HandleGlobalEvents();
    },
        this.HandleGlobalEvents = function () {
        debugger;
        jQuery.validator.setDefaults({
                invalidHandler: function (event, validator) {

                },
                highlight: function (element, errorClass, validClass) {
                    $(element).closest('.form-group').addClass("has-error");
                },
                unhighlight: function (element, errorClass, validClass) {
                    $(element).closest('.form-group').removeClass('has-error');
                },

                errorElement: 'span',
                errorClass: 'help-block',
                errorPlacement: function (error, element) {
                    if (element.parent('.input-group').length) {
                        debugger;
                        error.insertAfter(element.parent());
                    } else {
                        error.insertAfter(element);
                    }

                    //if (element.parent('.input-group').length || element.prop('type') === 'checkbox' || element.prop('type') === 'radio') {
                    //    error.insertAfter(element.parent());
                    //} else {
                    //    error.insertAfter(element);
                    //}
                }
            });
        },
    this.ValidateRequiredFields = function () {
        var isvalid = true;


        $(".required").each(function () {
            if ($.trim($(this).val()) === "") {
                $(this).closest(".form-group").addClass("has-error");
                $(this).siblings(".help-block").html($(this).data("fieldname") + " is Required field to Proceed");
                isvalid = false;
                return false;
            }
            else {
                $(this).closest(".form-group").removeClass("has-error has-warning");
            }
        });

        return isvalid;
    },

        this.ResetValidationMessages = function () {
            $(".required").each(function () {
                $(this).closest(".form-group").removeClass("has-error has-warning");
                $(this).siblings(".help-block").html("");

            });
        },

        this.ShowAlertMessage = function (message, type, heading) {
            toastr[type](message, heading);
        },
         this.FormDatePicker= function (inputid) {
 
             $('.' + inputid).datepicker({
                 Format: "dd/mm/yyyy",
                 showStatus: true,
                 showWeeks: true,
                 currentText: 'Now',
                 autoSize: true,
                 autoClose:true,
                 gotoCurrent: true,
                 showAnim: 'blind',
                 highlightWeek: true
             });
         },

        this.SubmitFormViaAjax = function (formid, url) {

        var data = null;

            Global.ResetValidationMessages();

            if (!Global.ValidateRequiredFields()) {
                // do nothing
            }

            else {
                url = url || $("#"+formid).attr("action");
                $.ajax({
                    url: url,
                    type: "POST",
                    dataType: "json",
                    data: $("#" + formid).serialize(),
                    async: false,
                    success: function (msg) {
                        Global.ShowAlertMessage(msg.Message, msg.Type, msg.Heading);
                        data = msg.Data;
                        if (msg.RedirectUrl != "" && msg.RedirectUrl != null) {
                            Global.RedirectToUrl(msg.RedirectUrl);
                        }
                    },
                    error: function () {
                        Global.ShowAlertMessage("An error occured", "error", "Error");
                    }

                });
            }

            return data;
        };
    this.ActiveTab = function (tab) {
        $('.nav-tabs a[id="' + tab + '"]').tab('show');
    };

    this.RedirectToUrl = function (url) {
        setTimeout(function () {
            window.location = url;
        }, 1000);
       
    };

   
};