ALTER TABLE tblOrganization
ADD iLanguageId int;
ALTER TABLE tblOrganization
ADD iTimeZoneId int;
ALTER TABLE tblOrganization
ADD vOrganizationLogo nvarchar(MAX);

ALTER TABLE tblModule
ADD iIsCore int;
ALTER TABLE tblModule
ADD dPrice decimal;

USE [HIS]
GO
/****** Object:  StoredProcedure [dbo].[pr_SaveOrganization]    Script Date: 6/17/2017 1:45:57 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER Procedure [dbo].[pr_SaveOrganization]
(@p_iOrganizationId int=null
,@p_vOrganizationName nvarchar(max) =null
,@p_vOrganizationShortName nvarchar(max)=null
,@p_vAddress nvarchar(max)=null
,@p_vPhoneNo nvarchar(max)=null
,@p_iCountryId int=null
,@p_iCityId int=null
,@p_dActivationDate datetime=null
,@p_dExpiryDate datetime=null
,@p_dRegistrationDate datetime=null
,@p_bIsActive bit=null
,@p_iCreatedUserId int=null
,@p_dCreatedDate datetime=null
,@p_iUpdatedUserId int=null
,@p_dUpdatedDate datetime=null
,@p_vContactPersonName nvarchar(max)=null
,@p_vContactPersonPhoneNo nvarchar(max)=null
,@p_vEmail nvarchar(max)=null
,@p_vDomainName nvarchar(max) =null
,@p_vOganizationLogo nvarchar(max)=null
,@p_iLanguageId int  =null
,@p_iTimeZoneId int = null)
AS
BEGIN
IF @p_iOrganizationId = 0

BEGIN
INSERT INTO tblOrganization (vOrganizationName
,vOrganizationShortName
,vAddress
,vPhoneNo
,iCountryId
,iCityId
,dActivationDate
,dExpiryDate
,dRegistrationDate
,bIsActive
,iCreatedUserId
,dCreatedDate
,iUpdatedUserId
,dUpdatedDate
,vContactPersonName
,vContactPersonPhoneNo
,vEmail
,vDomainName
,iLanguageId
,iTimeZoneId
,vOrganizationLogo) values (@p_vOrganizationName 
,@p_vOrganizationShortName 
,@p_vAddress 
,@p_vPhoneNo 
,@p_iCountryId 
,@p_iCityId 
,@p_dActivationDate 
,@p_dExpiryDate 
,@p_dRegistrationDate 
,@p_bIsActive 
,@p_iCreatedUserId 
,@p_dCreatedDate 
,@p_iUpdatedUserId 
,@p_dUpdatedDate 
,@p_vContactPersonName 
,@p_vContactPersonPhoneNo 
,@p_vEmail 
,@p_vDomainName
,@p_iLanguageId
,@p_iTimeZoneId
,@p_vOganizationLogo );
select SCOPE_IDENTITY();
END
ELSE IF @p_iOrganizationId  >0
BEGIN
Update tblOrganization

SET vOrganizationName=@p_vOrganizationName
,vOrganizationShortName=@p_vOrganizationShortName
,vAddress=@p_vAddress
,vPhoneNo=@p_vPhoneNo
,iCountryId=@p_iCountryId
,iCityId=@p_iCityId
,dActivationDate=@p_dActivationDate
,dExpiryDate=@p_dExpiryDate
,bIsActive=@p_bIsActive
,iCreatedUserId=@p_iCreatedUserId
,dCreatedDate=@p_dCreatedDate
,iUpdatedUserId=@p_iUpdatedUserId
,dUpdatedDate=@p_dUpdatedDate
,vContactPersonName=@p_vContactPersonName
,vContactPersonPhoneNo=@p_vContactPersonPhoneNo
,vEmail=@p_vEmail
,vDomainName=@p_vDomainName
,iLanguageId=@p_iLanguageId
, iTimeZoneId = @p_iTimeZoneId
, vOrganizationLogo = @p_vOganizationLogo
Where iOrganizationId = @p_iOrganizationId;
Select @p_iOrganizationId;
END
END


USE [HIS]
GO
/****** Object:  StoredProcedure [dbo].[pr_SaveModule]    Script Date: 6/17/2017 12:39:52 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[pr_SaveModule]
(
	@p_ModuleId int,
	@p_ModuleName varchar(100),
	@p_ModuleCode varchar(50),
	@p_IsCore int,
	@p_Price decimal,
	@p_CreatedUserId int
	
)
AS
BEGIN
if(@p_ModuleId =0) 
begin
insert into tblModule(vModuleName,vModuleCode,iCreatedUserId,dCreatedDate,iIsCore,dPrice)
values (@p_ModuleName,@p_ModuleCode,@p_CreatedUserId,SYSDATETIME(),@p_IsCore,@p_Price)
end 
else
begin
Update top (1) tblModule
set vModuleName = @p_ModuleName,
iUpdatedUserId  = @p_CreatedUserId,
dUpdatedDate = SYSDATETIME(),
iIsCore = @p_IsCore,
dPrice = @p_Price
Where iModuleId = @p_ModuleId
end

END



USE [HIS]
GO
/****** Object:  StoredProcedure [dbo].[pr_GetModule]    Script Date: 6/17/2017 12:55:35 AM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
ALTER PROCEDURE [dbo].[pr_GetModule]
(
	@p_SearchText varchar(100),
	@p_Offset int,
	@p_PageSize int
)
AS
BEGIN


	select COUNT(*) OVER () as TotalCount,  m.dCreatedDate, m.dUpdatedDate, m.iCreatedUserId, m.iUpdatedUserId,
		m.iModuleId, m.vModuleName, m.vModuleCode,m.iIsCore,m.dPrice
		 from tblModule m
	WHERE @p_SearchText = ''
	OR
	m.vModuleName like CONCAT('%', @p_SearchText, '%')

	order by m.iModuleId OFFSET @p_Offset ROWS  FETCH NEXT @p_PageSize ROWS ONLY;

END



