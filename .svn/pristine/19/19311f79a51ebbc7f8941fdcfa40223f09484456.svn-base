using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using HIS.Domain.Models.User;
using HIS.Web.Models;
using HIS.Domain.Models.Common;
using HIS.BLL;
using HIS.BLL.BLL;

namespace HIS.Web.Controllers
{
    public class UserController : Controller
    {
        #region Initialization

        public IUserBll _user { get; }
        public ICommonBll _common { get; }


        public UserController()
        {
            _user = new UserBll();
            _common = new CommonBll();
        }

        #endregion


        #region User Type

        public ActionResult UserTypeList(string searchText, int offset = 0, int pageSize = 10)
        {
            List<UserType> types = new List<UserType>();

            SearchCriteria criteria = new SearchCriteria()
            {
                Offset = offset,
                SearchText = searchText ?? "",
                PageSize = pageSize
            };
            
            int TotalRecords = 0;

            types = _user.GetUserTypes(criteria, out TotalRecords);

            ViewBag.Offset = offset;
            ViewBag.PageSize = pageSize;
            ViewBag.TotalRecords = TotalRecords;

            return View(types);
        }


        [HttpGet]
        public ActionResult UserTypeForm(int id = 0)
        {
            UserType ut = new UserType();

            if (id > 0)
            {
                ut = _user.GetUserTypeById(id);
                // get previous record for editing
            }

            return View(ut);
        }

        [HttpPost]
        public ActionResult UserTypeForm(UserType uType)
        {
            // TODO : assign user id from session to created user id..
            bool saved = _user.SaveUserType(uType);

            AjaxResponse response = new AjaxResponse()
            {
                Type = saved ? "success" : "error",
                Message = saved ?  "Data has been processed successfully" : "Unable to process data",
                Heading = "User Type"

            };

            return Json(response);
        }

        [HttpPost]
        public ActionResult DeleteUserTypeById(int id)
        {
            string message = "";
            string mclass = "";
            int deleted = _user.DeleteUserTypeById(id);
            if (deleted > 0)
            {
                message = "Operation completed successfully";
                mclass = "info";
            }
            else
            {
                message = "Unable to delete User Type";
                mclass = "error";
            }

            AjaxResponse res = new AjaxResponse() {
                 Message = message,
                 Type  = mclass,
                 Heading = "User Type"
            };


            return Json(res);
        }
        #endregion


        #region User

        public ActionResult UserForm(int id=0)
        {
            User user = new Domain.Models.User.User();

            ViewBag.Titles = _common.Titles.AsEnumerable().Select(a => new SelectListItem()
            {
                Text = a.TitleName,
                Value = a.TitleId.ToString()
            }).ToList();

            ViewBag.Genders = _common.Genders.AsEnumerable().Select(a => new SelectListItem()
            {
                Text = a.GenderName,
                Value = a.GenderId.ToString()
            }).ToList();

            ViewBag.Countries = _common.Countries.AsEnumerable().Select(a => new SelectListItem()
            {
                Text = a.CountryName,
                Value = a.CountryId.ToString()
            }).ToList();

            if (id > 0)
            {
                // get saved data
            }

            return View(user);
        }

        [HttpPost]
        public ActionResult UserForm(User  user)
        {
            user.CityId = 1;
            user.OrganizationId = 2;

            int id  = _user.SaveUser(user);

            AjaxResponse res = new AjaxResponse{
                  Message  = id > 0  ? "User Data saved" :"Unable to save user data",
                   Type =  id >  0 ? "success"  : "error",
                   Heading  =  "User"
            };


            return Json(res);
        }

        #endregion



    }
}
