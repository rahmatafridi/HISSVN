using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Web.Mvc;
using HIS.Domain.Models.User;
using HIS.Web.Models;
using HIS.Domain.Models.Common;
using HIS.BLL;
using HIS.Domain.Models.Organization;
using HIS.BLL.BLL;

namespace HIS.Web.Controllers
{
    public class OrganizationController : Controller
    {
        #region Initialization

        public IOrganizationBLL _organizationBll { get; set; }
        public ICommonBll _commonBll { get; set; }
        public IModuleBll _moduleBll { get; set; }

        public OrganizationController()
        {
            _organizationBll = new OrganizationBLL();
            _commonBll = new CommonBll();
            _moduleBll = new ModuleBLL();
        }

        #endregion


        #region Organization

        public ActionResult Index()
        {
            return View();
        }

        public ActionResult OrganizationList(string searchText, int offset = 0, int pageSize = 10)
        {
            List<Organization> organizations = new List<Organization>();

            SearchCriteria criteria = new SearchCriteria()
            {
                Offset = offset,
                SearchText = searchText ?? "",
                PageSize = pageSize
            };
            
            int TotalRecords = 0;

            organizations = _organizationBll.GetOrganizations(criteria, out TotalRecords);

            ViewBag.Offset = offset;
            ViewBag.PageSize = pageSize;
            ViewBag.TotalRecords = TotalRecords;

            return View(organizations);
        }

        public ActionResult OrganizationForm(int id = 0)
        {
            Organization organization = new Organization();

            ViewBag.Cities = _commonBll.Cities.AsEnumerable().Select(a => new SelectListItem()
            {
                Text = a.CityName,
                Value = a.CityId.ToString()
            }).ToList();
            ViewBag.Countries = _commonBll.Countries.AsEnumerable().Select(a => new SelectListItem()
            {
                Text = a.CountryName,
                Value = a.CountryId.ToString()
            }).ToList();

            int total = 0;
            ViewBag.Modules = _moduleBll.GetModule(new SearchCriteria() { Offset = 0, PageSize = 500, SearchText = "" }, out total)
                .Where(a => a.OrganizationId == 0 || a.OrganizationId == Helper.GetLoggedInUserOrganization()).ToList();

            //ViewBag.Types = _user.GetUserTypes(new SearchCriteria() { Offset = 0, PageSize = 500, SearchText = "" }, out total).ToList();


            if (id > 0)
            {
                // get saved data
            }

            return View(organization);
        }

        [HttpPost]
        public ActionResult OrganizationForm(Organization organization, List<int> organizationModule)
        {
            // sir why do we need country and city for user.. ;(
            organization.iCityId = 1;
            organization.iCountryId = 1;
            organization.iOrganizationId = 2;

            AjaxResponse res = new AjaxResponse();


            //if (_user.DoesUsernameOrEmailExists(user.UserName, user.Email))
            //{
            //    res = new AjaxResponse()
            //    {
            //        Message = "Username or Email already in Use",
            //        Type = "warning",
            //        Heading = "User",
            //    };
            //}
            //else
            //{
            //    int id = _user.SaveUser(user);

            //    res = new AjaxResponse()
            //    {
            //        Message = id > 0 ? "User Data saved" : "Unable to save user data",
            //        Type = id > 0 ? "success" : "error",
            //        Heading = "User",
            //        Data = id
            //    };
            //}


            return Json(res);
        }


        #endregion


    }
}
